name: Provision Infra using Terraform via EC2 
on:
 pull_request:
 push:
  
permissions:
  id-token: write
  contents: read

jobs:
  provision:
    name: Terraform Infra via EC2
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE }}
          aws-region: us-east-2
 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5
          
 
      - name: Generate terraform docs
        uses: terraform-docs/gh-actions@users
        with:           
          working-dir: .
Â Â Â        git-push: true
Â Â Â        output-file: README.md
Â Â Â        output-method: inject
Â Â Â        config-file: disabled
Â Â Â        atlantis-file: disabled
Â Â Â        find-dir: disabled
Â Â Â        recursive: false
Â Â Â        recursive-path: modules
Â Â Â        output-format: markdown table
Â Â Â  

 
      # - name: Commit docs
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |S

      #     BRANCH_NAME="users"
         
      #     # Configure Git user
      #      git config --global user.name "github-actions[bot]"
      #      git config --global user.email "github-actions[bot]@users.noreply.github.com"
 
      #     # Checkout to the branch
      #     git checkout "$BRANCH_NAME"
          
      #     # Add README file
      #     git add modules/**/README.md
          
      #     # Commit changes
      #     git commit -m "ðŸ“˜ terraform-docs: automated update" || echo "No changes to commit"
          
      #     # Push changes to the correct branch
      #     git push https://github-actions:${{ secrets.GITHUB }}@github.com/${{ github.repository }} HEAD:"$BRANCH_NAME"
             
      # # - name: Generate terraform docs
      # #   uses: terraform-docs/gh-actions@v1.0.0
      # #   with:
      # #      working-dir: modules/
      # #      git-push: true
      # #      output-file: README.md
      # #      output-method: replace
          
      # - name: Terraform Apply (Create EC2)
      #   run: terraform apply -auto-approve
        
      # - name: Terraform destroy (Create EC2)
      #   run: terraform destroy -auto-approve
        
